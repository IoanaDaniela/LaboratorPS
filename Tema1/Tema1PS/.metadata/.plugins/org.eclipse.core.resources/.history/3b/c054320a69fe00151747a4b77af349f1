package ro.utcluj.ps.tema1.GUI;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.TextField;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import ro.utcluj.ps.tema1.BL.UserManager;
import ro.utcluj.ps.tema1.Models.User;



public class AdminForm extends JFrame implements ActionListener{

	
	
	private static final long serialVersionUID = 1L;
	private JMenuBar menuBar;
	private JMenu meniu;
	private JMenuItem addEmployee, addShow ,logOut;
	private User usr;
	private JPanel adminPanel;

	
	//ADD EMPLOYEE
	private JPanel addEmployeePanel; 
	private JLabel usernameLabel;
	private JLabel password1Label;
	private JLabel password2Label;
	private TextField usernameTextField;
	private TextField password1TextField;
	private TextField password2TextField;
	private JButton addEmployeeButton;
	
	
	//ADD SHOW
	private JPanel addShowPanel;
	private JLabel showNameLabel,  filmDirectorLabel, filmDistributionLabel, releasedOnLabel, availableTicketsLabel;
	private TextField showNameTextField,  filmDirectorTextField, filmDistributionTextField, releasedOnTextField, availableTicketsTextField;
	private JButton addShowButton;
	
	//SHOWS LIST
	private JPanel showsListPanel, updateShowPanel;
	private JLabel showNameUpdateLabel,  filmDirectorUpdateLabel, filmDistributionUpdateLabel, releasedOnUpdateLabel, availableTicketsUpdateLabel;
	private TextField showNameUpdateTextField,  filmDirectorUpdateTextField, filmDistributionUpdateTextField, releasedOnUpdateTextField, availableTicketsUpdateTextField;
	private JButton updateShowButton, deleteShowButton, saveChangesButton;
	
	
	//Shows List
	
	
	@SuppressWarnings("deprecation")
	public AdminForm(User usr,String title){
		super(title);
		this.usr = usr;
		
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		int screenHeight =(int)screenSize.getHeight();
		setSize(800,screenHeight);
		
		adminPanel = new JPanel(null);
		adminPanel.setLayout( null );
		adminPanel.setBounds(0,0,800,screenHeight);
		getContentPane().add(adminPanel);
		
	
		//MENIU
		menuBar = new JMenuBar();	 
		meniu = new JMenu("Menu");
				
		addEmployee = new JMenuItem("Add Employee");
		addEmployee.addActionListener(this);
		
		addShow = new JMenuItem("Add Show");
		addShow.addActionListener(this);
				
		logOut = new JMenuItem("Log out");
		logOut.addActionListener(this);
				
		meniu.add(addEmployee);
		meniu.add(addShow);
		meniu.addSeparator();
		meniu.add(logOut);
		
		menuBar.add(meniu);
		menuBar.setBounds(0,0,800,20);
		 
		
		//ADD EMPLOYEE
		addEmployeePanel = new JPanel(null);
		addEmployeePanel.setLayout(null);
		addEmployeePanel.setBounds(0, 20, 800, screenHeight-20);
		addEmployeePanel.setBackground(new Color(130,130,60));
		
		usernameLabel = new JLabel("Username:");
		usernameLabel.setFont(new Font(null,3,25));
		usernameLabel.setBounds(10,10, 200, 50);
		usernameLabel.setForeground(Color.WHITE);
		
		usernameTextField = new TextField(40);
		usernameTextField.setFont(new Font(null,3,25));
		usernameTextField.setBounds(210, 10, 300, 50);
	
		password1Label = new JLabel("Password:");
		password1Label.setFont(new Font(null,3,25));
		password1Label.setBounds(10,90,200,50);
		password1Label.setForeground(Color.WHITE);

		password1TextField = new TextField(40);
		password1TextField.setFont(new Font(null,3,25));
		password1TextField.setBounds(210, 90, 300, 50);
		password1TextField.setEchoChar('*');
		
		password2Label = new JLabel("Password:");
		password2Label.setFont(new Font(null,3,25));
		password2Label.setBounds(10,170,200,50);
		password2Label.setForeground(Color.WHITE);

		password2TextField = new TextField(40);
		password2TextField.setFont(new Font(null,3,25));
		password2TextField.setBounds(210, 170, 300, 50);
		password2TextField.setEchoChar('*');
		
		
		addEmployeeButton = new JButton("AddEmployee");
		addEmployeeButton.setFont(new Font(null,3,25));
		addEmployeeButton.setBounds(210, 250, 300, 50);
		addEmployeeButton.addActionListener(this);
		
		addEmployeePanel.add(usernameLabel);
		addEmployeePanel.add(usernameTextField);
		addEmployeePanel.add(password1Label);
		addEmployeePanel.add(password2Label);
		addEmployeePanel.add(password1TextField);
		addEmployeePanel.add(password2TextField);
		addEmployeePanel.add(addEmployeeButton);
		addEmployeePanel.hide();
		
		adminPanel.add(addEmployeePanel);
		adminPanel.add(menuBar);
		this.add(adminPanel);
		
		
		//ADD SHOW
		addShowPanel = new JPanel(null);
		addShowPanel.setLayout(null);
		addShowPanel.setBounds(0, 20, 800, screenHeight-20);
		addShowPanel.setBackground(new Color(130,130,60));
				
		showNameLabel = new JLabel("Show Name:");
		showNameLabel.setFont(new Font(null,3,25));
		showNameLabel.setBounds(10,10, 300, 50);
		showNameLabel.setForeground(Color.WHITE);
				
		showNameTextField = new TextField(40);
		showNameTextField.setFont(new Font(null,3,25));
		showNameTextField.setBounds(310, 10, 300, 50);
			
		filmDirectorLabel = new JLabel("Show Director:");
		filmDirectorLabel.setFont(new Font(null,3,25));
		filmDirectorLabel.setBounds(10,90,300,50);
		filmDirectorLabel.setForeground(Color.WHITE);

		filmDirectorTextField = new TextField(40);
		filmDirectorTextField.setFont(new Font(null,3,25));
		filmDirectorTextField.setBounds(310, 90, 300, 50);

				
		filmDistributionLabel = new JLabel("Show Distribution:");
		filmDistributionLabel.setFont(new Font(null,3,25));
		filmDistributionLabel.setBounds(10,170,300,50);
		filmDistributionLabel.setForeground(Color.WHITE);

		filmDistributionTextField = new TextField(40);
		filmDistributionTextField.setFont(new Font(null,3,25));
		filmDistributionTextField.setBounds(310, 170, 300, 50);

		
		releasedOnLabel = new JLabel("Released on:");
		releasedOnLabel.setFont(new Font(null,3,25));
		releasedOnLabel.setBounds(10,250,300,50);
		releasedOnLabel.setForeground(Color.WHITE);
		
		releasedOnTextField = new TextField(40);
		releasedOnTextField.setText("YYYY-MM-DD");
		releasedOnTextField.setFont(new Font(null,3,25));
		releasedOnTextField.setBounds(310, 250, 300, 50);

		
		availableTicketsLabel = new JLabel("Available Tickets:");
		availableTicketsLabel.setFont(new Font(null,3,25));
		availableTicketsLabel.setBounds(10,330,300,50);
		availableTicketsLabel.setForeground(Color.WHITE);
		
		availableTicketsTextField = new TextField(40);
		availableTicketsTextField.setFont(new Font(null,3,25));
		availableTicketsTextField.setBounds(310, 330, 300, 50);
		
				
		addShowButton = new JButton("AddShow");
		addShowButton.setFont(new Font(null,3,25));
		addShowButton.setBounds(310, 410, 300, 50);
		addShowButton.addActionListener(this);
				
		addShowPanel.add(showNameLabel);
		addShowPanel.add(showNameTextField);
		addShowPanel.add(filmDistributionLabel);
		addShowPanel.add(filmDistributionTextField);
		addShowPanel.add(filmDirectorLabel);
		addShowPanel.add(filmDirectorTextField);
		addShowPanel.add(releasedOnLabel);
		addShowPanel.add(releasedOnTextField);
		addShowPanel.add(availableTicketsLabel);
		addShowPanel.add(availableTicketsTextField);
		addShowPanel.add(addShowButton);
		addShowPanel.hide();
		adminPanel.add(addShowPanel);
		
		
		//SHOWS LIST
		showsListPanel = new JPanel(null);
		showsListPanel.setLayout(null);
		showsListPanel.setBounds(0, 20, 800, screenHeight-20);
		showsListPanel.setBackground(new Color(130,130,60));
						
		showNameUpdateLabel = new JLabel("Show Name:");
		showNameUpdateLabel.setFont(new Font(null,3,25));
		showNameUpdateLabel.setBounds(10,10, 300, 50);
		showNameUpdateLabel.setForeground(Color.WHITE);
						
		showNameUpdateTextField = new TextField(40);
		showNameUpdateTextField.setFont(new Font(null,3,25));
		showNameUpdateTextField.setBounds(310, 10, 300, 50);
					
		filmDirectorUpdateLabel = new JLabel("Show Director:");
		filmDirectorUpdateLabel.setFont(new Font(null,3,25));
		filmDirectorUpdateLabel.setBounds(10,90,300,50);
		filmDirectorUpdateLabel.setForeground(Color.WHITE);

		filmDirectorUpdateTextField = new TextField(40);
		filmDirectorUpdateTextField.setFont(new Font(null,3,25));
		filmDirectorUpdateTextField.setBounds(310, 90, 300, 50);

						
		filmDistributionUpdateLabel = new JLabel("Show Distribution:");
		filmDistributionUpdateLabel.setFont(new Font(null,3,25));
		filmDistributionUpdateLabel.setBounds(10,170,300,50);
		filmDistributionUpdateLabel.setForeground(Color.WHITE);

		filmDistributionUpdateTextField = new TextField(40);
		filmDistributionUpdateTextField.setFont(new Font(null,3,25));
		filmDistributionUpdateTextField.setBounds(310, 170, 300, 50);

				
		releasedOnUpdateLabel = new JLabel("Released on:");
		releasedOnUpdateLabel.setFont(new Font(null,3,25));
		releasedOnUpdateLabel.setBounds(10,250,300,50);
		releasedOnUpdateLabel.setForeground(Color.WHITE);
				
		releasedOnUpdateTextField = new TextField(40);
		releasedOnUpdateTextField.setText("YYYY-MM-DD");
		releasedOnUpdateTextField.setFont(new Font(null,3,25));
		releasedOnUpdateTextField.setBounds(310, 250, 300, 50);

				
		availableTicketsUpdateLabel = new JLabel("Available Tickets:");
		availableTicketsUpdateLabel.setFont(new Font(null,3,25));
		availableTicketsUpdateLabel.setBounds(10,330,300,50);
		availableTicketsUpdateLabel.setForeground(Color.WHITE);
				
		availableTicketsUpdateTextField = new TextField(40);
		availableTicketsUpdateTextField.setFont(new Font(null,3,25));
		availableTicketsUpdateTextField.setBounds(310, 330, 300, 50);
				
						
		deleteShowButton = new JButton("DeleteShow");
		deleteShowButton.setFont(new Font(null,3,25));
		deleteShowButton.setBounds(310, 410, 300, 50);
		deleteShowButton.addActionListener(this);
		
		updateShowButton = new JButton("UpdateShow");
		updateShowButton.setFont(new Font(null,3,25));
		updateShowButton.setBounds(310, 410, 300, 50);
		updateShowButton.addActionListener(this);
		
		
		saveChangesButton = new JButton("SaveChanges");
		saveChangesButton.setFont(new Font(null,3,25));
		saveChangesButton.setBounds(310, 410, 300, 50);
		saveChangesButton.addActionListener(this);
		
		
		updateShowPanel = new JPanel(null);
		updateShowPanel.setLayout(null);
		updateShowPanel.setBounds(0, 20+(screenHeight-20)/2, 800, (screenHeight-20)/2);
		updateShowPanel.setBackground(new Color(130,130,130)); //130, 130, 60
						
		updateShowPanel.add(showNameUpdateLabel);
		updateShowPanel.add(showNameUpdateTextField);
		updateShowPanel.add(filmDistributionUpdateLabel);
		updateShowPanel.add(filmDistributionUpdateTextField);
		updateShowPanel.add(filmDirectorUpdateLabel);
		updateShowPanel.add(filmDirectorUpdateTextField);
		updateShowPanel.add(releasedOnUpdateLabel);
		updateShowPanel.add(releasedOnUpdateTextField);
		updateShowPanel.add(availableTicketsUpdateLabel);
		updateShowPanel.add(availableTicketsUpdateTextField);
		updateShowPanel.add(saveChangesButton);
		updateShowPanel.hide();
		
		showsListPanel.add(updateShowPanel);
		showsListPanel.add(deleteShowButton);
		showsListPanel.add(updateShowButton);
		showsListPanel.hide();
		adminPanel.add(showsListPanel);
		
		
		
		
		
		
		show();
	}
	
	
	@SuppressWarnings("deprecation")
	@Override
	public void actionPerformed(ActionEvent e) {
		String command = e.getActionCommand();
		if(command.equals("Add Employee")){
			addEmployeePanel.show();
			addShowPanel.hide();
			showsListPanel.hide();
			show();
			
		}else if(command.equals("AddEmployee")){
			String pass1=password1TextField.getText();
			String pass2=password2TextField.getText();
			String username = usernameTextField.getText();
			if (!pass1.equals(pass2)){
				JOptionPane.showMessageDialog(null, "Parolele nu coincid!");
			}else{
				UserManager uM = new UserManager();
				uM.addUser(username, pass1);
				JOptionPane.showMessageDialog(null, "Inregistrat cu succes!");
			}
		}else if(command.equals("Add Show")){
			showsListPanel.hide();
			addEmployeePanel.hide();
			addShowPanel.show();
			show();
		}else if(command.equals("AddShow")){
			String showName =showNameTextField.getText();
			String regia =filmDirectorTextField.getText();
			String distributia = filmDistributionTextField.getText();
			String dataPremierei = releasedOnTextField.getText();
			String bilete =availableTicketsTextField.getText();
			dataPremierei.replace("-", "");
			
			UserManager uM = new UserManager();
			uM.addShow(showName, regia, distributia, dataPremierei, bilete);
			
			
			JOptionPane.showMessageDialog(null, "Inregistrat cu succes!");
			showNameTextField.setText("");
			filmDirectorTextField.setText("");
			filmDistributionTextField.setText("");
			releasedOnTextField.setText("YYYY-MM-DD");
			availableTicketsTextField.setText("");
			
		}else if(command.equals("Shows List")){
			addEmployeePanel.hide();
			addShowPanel.hide();
			showsListPanel.show();
			show();
		}else if(command.equals("DeleteShow")){
			
			
		}else if(command.equals("UpdateShow")){
			
			
		}else if(command.equals("SaveChanges")){
			
			
		}
		
	}

	
	public void seUser(User usr){
		this.usr = usr;
	}
		
	
}
